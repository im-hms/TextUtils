{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","newStyle","padding","cursor","backgroundColor","color","borderRadius","newStyle2","color2","newStyle3","color3","newStyle4","color4","React","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","btnShow4","onClick","toggle4","style","btnShow3","toggle3","btnShow2","toggle2","btnShow","toggle","htmlFor","TextForm","Rcount","_useState","useState","_useState2","_slicedToArray","text","setText","count","split","includes","length","heading","placeholder","value","onChange","event","target","rows","newText","toUpperCase","showAlert","btnMode","toLowerCase","reverse","join","window","confirm","Alert","alert","role","word","lower","slice","cap","msg","defaultProps","App","setAlert","_useState3","_useState4","setMode","_useState5","_useState6","setBtnMode","_useState7","_useState8","setBtnShow","_useState9","_useState10","setBtnShow2","_useState11","_useState12","setBtnShow3","_useState13","_useState14","setBtnShow4","_useState15","_useState16","setcolor","_useState17","_useState18","setcolor2","_useState19","_useState20","setcolor3","_useState21","_useState22","setcolor4","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f56e94db.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n  let newStyle = {\r\n    padding: \"5px 15px\",\r\n    cursor: 'pointer',\r\n    backgroundColor: props.color,\r\n    borderRadius: '50%'\r\n  }\r\n  let newStyle2 = {\r\n    padding: \"5px 15px\",\r\n    cursor: 'pointer',\r\n    backgroundColor: props.color2,\r\n    borderRadius: '50%'\r\n  }\r\n  let newStyle3 = {\r\n    padding: \"5px 15px\",\r\n    cursor: 'pointer',\r\n    backgroundColor: props.color3,\r\n    borderRadius: '50%'\r\n  }\r\n  let newStyle4 = {\r\n    padding: \"5px 15px\",\r\n    cursor: 'pointer',\r\n    backgroundColor: props.color4,\r\n    borderRadius: '50%'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">{props.about}</a>\r\n        </li>\r\n        \r\n        \r\n      </ul>\r\n      <div className={`${props.btnShow4} mx-1`}>\r\n        <span onClick={props.toggle4}  style={newStyle4}></span>\r\n      </div>\r\n      <div className={`${props.btnShow3} mx-1`}>\r\n        <span onClick={props.toggle3} style={newStyle3}></span>\r\n      </div>\r\n      <div className={`${props.btnShow2} mx-1`}>\r\n        <span onClick={props.toggle2}   style={newStyle2}></span>\r\n      </div>\r\n      <div className={`${props.btnShow} mx-1`}>\r\n        <span onClick={props.toggle} style={newStyle}></span>\r\n      </div>\r\n        <label className={`form-check-label text-${props.mode === 'light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">{props.mode === 'light'?'Enable Dark Mode': 'Enable Light Mode'}</label>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </>\r\n  )\r\n\r\n  \r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    about: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    about: 'set about here'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const [text, setText] = useState(\"\")\r\n\r\n  // ====================== For Onchange event ==============\r\n  const onChang = (event) =>{\r\n    setText(event.target.value)\r\n  }\r\n  // ====================== For Onchange event ==============\r\n  \r\n  // ====================== For Upper case ==============\r\n  const handleUpClick = ()=>{\r\n    let newText= text.toUpperCase()\r\n    setText(newText)\r\n    if (text.length>0) {\r\n      props.showAlert('Converted to UpperCase', 'success')\r\n    }else{\r\n      props.showAlert('Please type something in the given box to convert it.', 'warning')\r\n    }\r\n  }\r\n  // ====================== For Upper case ==============\r\n  // ====================== For lower case ==============\r\n  const handleLowClick = ()=>{\r\n    let newText= text.toLowerCase()\r\n    setText(newText)\r\n    if (text.length>0) {\r\n      props.showAlert('Converted to LowerCase', 'success')\r\n    }else{\r\n      props.showAlert('Please type something in the given box to convert it.', 'warning')\r\n    }\r\n  }\r\n  \r\n  // ====================== For lower case ==============\r\n  // ====================== For clear ==============\r\n  const handleClearClick = ()=>{\r\n    let confirmation = window.confirm('Do you really want to remove everything')\r\n    if(confirmation === true) {\r\n      let newText= ''\r\n      setText(newText)\r\n    }\r\n  }\r\n  // ====================== For clear ==============\r\n  // ====================== For Inverse ==============\r\n  const handleInverseClick = ()=>{\r\n    let newText= text.split('')\r\n    newText = newText.reverse().join('')\r\n    setText(newText)\r\n  }\r\n  // ====================== For Inverse ==============\r\n  // ====================== For Inverse Words==============\r\n  const handleInverseWClick = ()=>{\r\n    let newText= text.split(' ')\r\n    newText = newText.reverse().join(' ')\r\n    setText(newText)\r\n  }\r\n  // ====================== For Inverse ==============\r\n  \r\n  // ====================== For words count ==============\r\n  let count = text.split(\" \");\r\n  let Rcount;\r\n  if (count.includes('')) {\r\n    Rcount = count.length -1\r\n  }\r\n  else{\r\n    Rcount = count.length \r\n  }\r\n  // ====================== For words count ==============\r\n \r\n  return (\r\n    <>\r\n    <div className='container' style={{color: props.mode ==='light'?  'black':'white'}}>\r\n      <div className=\"mb-3\">\r\n        <h1 className='my-3'>{props.heading}</h1>\r\n        <textarea style={{color: props.mode ==='light'?  'black':'white', backgroundColor: props.mode ==='light'?  'white':'#727272'}} className=\"form-control\" placeholder='Enter text here...' value={text} onChange={onChang} id=\"myBox\" rows=\"8\"></textarea>\r\n        <button onClick={handleUpClick} className={`btn btn-${props.btnMode} my-3`}>Convert to upperCase</button>\r\n        <button onClick={handleLowClick} className={`btn btn-${props.btnMode} m-1`}>Convert to LowerCase</button>\r\n        <button onClick={handleInverseClick} className={`btn btn-${props.btnMode}`}>Inverse C</button>\r\n        <button onClick={handleInverseWClick} className={`btn btn-${props.btnMode} m-1`}>Inverse W</button>\r\n        <button onClick={handleClearClick} className={`btn btn-${props.btnMode}`}>Clear All</button>\r\n      </div>\r\n    </div>\r\n    <div className='container my-4' style={{color: props.mode ==='light'?  'black':'white'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{Rcount} WORDS and {text.length} CHARACTERS</p>\r\n      <p>{Rcount * 0.008} Minutes to read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0? text: 'Enter some text in the above box to preview here.'}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    // ============= For Capitalize 1st word ============\r\n    const cap = (word)=>{\r\n        let lower = word.toLowerCase();\r\n        return lower[0].toUpperCase() + lower.slice(1)\r\n    }\r\n    // ============= For Capitalize 1st word ============\r\n    \r\n  return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show` }role=\"alert\">\r\n            <strong>{cap(props.alert.type)}:</strong> {props.alert.msg}\r\n        </div>\r\n  )\r\n}\r\n","import React from \"react\";\nimport { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\nfunction App() {\n\n  const [alert, setAlert] = useState(null)\n  const [mode, setMode] = useState('light')\n  const [btnMode, setBtnMode] = useState('primary')\n  // ============= states for disable nav button color =================\n  const [btnShow, setBtnShow] = useState('')\n  const [btnShow2, setBtnShow2] = useState('')\n  const [btnShow3, setBtnShow3] = useState('')\n  const [btnShow4, setBtnShow4] = useState('')\n  // ============= states for disable nav button color =================\n  // ============= states for change my nav button color =================\n  const [color, setcolor] = useState('#191b1c')\n  const [color2, setcolor2] = useState('#125555')\n  const [color3, setcolor3] = useState('#091a08')\n  const [color4, setcolor4] = useState('#b74559')\n  // ============= states for change my nav button color =================\n\n  // ---------- Function for alert -------------\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n  // ---------- Function for alert -------------\n  // ---------- Function to toggle dark mode -------------\n  const toggle = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#191b1c'\n      showAlert('Dark Mode is Enabled', 'success')\n      setBtnMode('dark')\n      setcolor('white')\n      setBtnShow2('d-none')\n      setBtnShow3('d-none')\n      setBtnShow4('d-none')\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert('Dark Mode is Disabled', 'success')\n      setBtnMode('primary')\n      setcolor('#191b1c')\n      setBtnShow2('')\n      setBtnShow3('')\n      setBtnShow4('')\n    }\n  }\n  // ---------- Function to toggle dark mode -------------\n  // ---------- Function to toggle dark mode 2-------------\n  const toggle2 = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#125555'\n      showAlert('Dark Mode is Enabled', 'success')\n      setBtnMode('info')\n      setcolor2('white')\n      setBtnShow('d-none')\n      setBtnShow3('d-none')\n      setBtnShow4('d-none')\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert('Dark Mode is Disabled', 'success')\n      setBtnMode('primary')\n      setcolor2('#125555')\n      setBtnShow('')\n      setBtnShow3('')\n      setBtnShow4('')\n    }\n  }\n  // ---------- Function to toggle dark mode 2 -------------\n  // ---------- Function to toggle dark mode 3-------------\n  const toggle3 = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#091a08'\n      showAlert('Dark Mode is Enabled', 'success')\n      setBtnMode('success')\n      setcolor3('white')\n      setBtnShow('d-none')\n      setBtnShow2('d-none')\n      setBtnShow4('d-none')\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert('Dark Mode is Disabled', 'success')\n      setBtnMode('primary')\n      setcolor3('#091a08')\n      setBtnShow('')\n      setBtnShow2('')\n      setBtnShow4('')\n    }\n  }\n  // ---------- Function to toggle dark mode 3 -------------\n  // ---------- Function to toggle dark mode 4-------------\n  const toggle4 = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#b74559'\n      showAlert('Dark Mode is Enabled', 'success')\n      setBtnMode('danger')\n      setcolor4('white')\n      setBtnShow('d-none')\n      setBtnShow2('d-none')\n      setBtnShow3('d-none')\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert('Dark Mode is Disabled', 'success')\n      setBtnMode('primary')\n      setcolor4('#b74559')\n      setBtnShow('')\n      setBtnShow2('')\n      setBtnShow3('')\n    }\n  }\n  // ---------- Function to toggle dark mode 4 -------------\n  \n  return (\n    <>\n    <Navbar title= \"TextUtils\" btnShow = {btnShow} btnShow2 = {btnShow2} btnShow3 = {btnShow3} btnShow4 = {btnShow4} color = {color} color2 = {color2} color3 = {color3} color4 = {color4}  about= \"About\" mode ={mode} toggle = {toggle} toggle2 = {toggle2} toggle3 = {toggle3} toggle4 = {toggle4} />\n    <Alert alert = {alert} />\n    <div className='container my-3'>\n      <TextForm showAlert = {showAlert} btnMode ={btnMode} heading= \"Enter Text below to analyze\" mode ={mode}/>\n    </div>\n      {/* <About /> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}